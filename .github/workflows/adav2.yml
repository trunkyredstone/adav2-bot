name: ADAv2

on:
  push:
    tags:
      - 'v*'

jobs:
  test-versions:
    name: Integrate and deliver - Rust stable
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        rust: [ stable ]
    steps:
      - uses: actions/checkout@v2

      - uses: hecrj/setup-rust-action@v1
        with:
          rust-version: ${{ matrix.rust }}

      - name: Compile ADAv2
        run: cargo build

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: Automatically built version.
          draft: false
          prerelease: false

      - name: Upload Binary
        id: upload_binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./target/debug/adav2
          asset_name: adav2
          asset_content_type: application/octet-stream

      - name: Upload Config Template
        id: upload_config_template
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./Settings.template.toml
          asset_name: Settings.template.toml
          asset_content_type: application/toml
